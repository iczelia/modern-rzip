name: Build

on: [ push, pull_request ]

jobs:
  build:
    name: Build Matrix
    strategy:
      fail-fast: false
      matrix:
        platform: [ ubuntu-latest, macos-latest ]
        compiler: [ clang, gcc ]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - name: Configure
      run: |
        sudo apt update -q -y
        sudo apt install -q -y clang gcc make libgcrypt-dev libgpg-error-dev
        ./configure CC=${{ matrix.compiler }}
    - name: Make
      run: make -j$(nproc)

  build-archs:
    name: Build Matrix for non-x86 architectures
    strategy:
      fail-fast: false
      matrix:
        compiler: [ clang, gcc ]
        arch: [ aarch64, s390x, ppc64le ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: uraimo/run-on-arch-action@v2
      name: Run in the container
      with:
        arch: ${{ matrix.arch }}
        distro: stretch
        shell: /bin/sh
        dockerRunArgs: |
          --volume "${PWD}:/modern-rzip"
        install: |
          sudo apt update -q -y
          sudo apt install -q -y clang gcc make libgcrypt-dev libgpg-error-dev
        run: |
          cd /modern-rzip
          ./configure CC=${{ matrix.compiler }} --${{ matrix.feature }}
          make

